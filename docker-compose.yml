networks:
  monitor-net:
    name: "monitor-net"
    driver: bridge

volumes:
  prometheus_data: { }
  grafana_data: { }
  loki_data: { }
  jaeger_data: { }
  caddy_data: { }
  caddy_config: { }

services:
  # === Метрики и мониторинг ===
  prometheus:
    image: prom/prometheus:v2.52.0
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=200h'
    restart: unless-stopped
    ports:
      - "10003:9090"
    networks:
      - monitor-net

  alertmanager:
    image: prom/alertmanager:v0.27.0
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
    restart: unless-stopped
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
    networks:
      - monitor-net

  grafana:
    image: grafana/grafana:11.0.0
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=mckn-funnel-panel
    restart: unless-stopped
    ports:
      - "10001:3000"
    networks:
      - monitor-net

  pushgateway:
    image: prom/pushgateway:v1.9.0
    restart: unless-stopped
    networks:
      - monitor-net

  # === Экспортёры метрик ===
  nodeexporter:
    image: prom/node-exporter:v1.8.1
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
    restart: unless-stopped
    networks:
      - monitor-net

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    restart: unless-stopped
    networks:
      - monitor-net

  # === Логирование и трассировка ===
  loki:
    image: grafana/loki:latest
    volumes:
      - loki_data:/loki
      - ./loki/config.yaml:/etc/loki/config.yaml
    command: -config.file=/etc/loki/config.yaml
    networks:
      - monitor-net

  promtail:
    image: grafana/promtail:latest
    volumes:
      - /var/log:/var/log
      - ./promtail/config.yaml:/etc/promtail/config.yaml
    command: -config.file=/etc/promtail/config.yaml
    networks:
      - monitor-net

  jaeger:
    image: jaegertracing/all-in-one:latest
    volumes:
      - jaeger_data:/data
    ports:
      - "10002:16686"
    networks:
      - monitor-net

  otel-collector:
    image: otel/opentelemetry-collector:latest
    volumes:
      - ./otel-collector/config.yaml:/etc/otel-collector/config.yaml
    command: --config=/etc/otel-collector/config.yaml
    networks:
      - monitor-net